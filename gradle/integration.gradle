
if(project.plugins.hasPlugin(org.gradle.api.plugins.scala.ScalaPlugin)){

    sourceSets {
        integrationTest {
            scala {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/scala')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

}else{
    sourceSets {
        integrationTest {
            groovy {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/groovy')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

}




configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


integrationTest.mustRunAfter test